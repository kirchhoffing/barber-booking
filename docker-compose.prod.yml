version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - VITE_API_URL=${VITE_API_URL:-https://api.your-domain.com}
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-barber_booking}?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=production
      - CORS_ORIGIN=${CORS_ORIGIN:-https://your-domain.com}
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-barber_booking}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  certbot:
    image: certbot/certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email your-email@domain.com -d your-domain.com -d www.your-domain.com --agree-tos

volumes:
  postgres_data: 